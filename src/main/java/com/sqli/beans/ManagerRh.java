package com.sqli.beans;

// Generated 30 d√©c. 2013 23:37:20 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ManagerRh generated by hbm2java
 */
@Entity
@Table(name = "manager_rh", catalog = "chalenger")
public class ManagerRh implements java.io.Serializable {

	private ManagerRhId id;
	private Collaborateur collaborateur;
	private Set<User> users = new HashSet<User>(0);
	private Set<Collaborateur> collaborateursForFkActuelMrh = new HashSet<Collaborateur>(
			0);
	private Set<Collaborateur> collaborateursForFkEncienMrh = new HashSet<Collaborateur>(
			0);

	public ManagerRh() {
	}

	public ManagerRh(ManagerRhId id, Collaborateur collaborateur) {
		this.id = id;
		this.collaborateur = collaborateur;
	}

	public ManagerRh(ManagerRhId id, Collaborateur collaborateur,
			Set<User> users, Set<Collaborateur> collaborateursForFkActuelMrh,
			Set<Collaborateur> collaborateursForFkEncienMrh) {
		this.id = id;
		this.collaborateur = collaborateur;
		this.users = users;
		this.collaborateursForFkActuelMrh = collaborateursForFkActuelMrh;
		this.collaborateursForFkEncienMrh = collaborateursForFkEncienMrh;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "matricule", column = @Column(name = "Matricule", nullable = false)),
			@AttributeOverride(name = "idManagerRh", column = @Column(name = "Id_manager_RH", nullable = false)) })
	public ManagerRhId getId() {
		return this.id;
	}

	public void setId(ManagerRhId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Matricule", nullable = false, insertable = false, updatable = false)
	public Collaborateur getCollaborateur() {
		return this.collaborateur;
	}

	public void setCollaborateur(Collaborateur collaborateur) {
		this.collaborateur = collaborateur;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "managerRh")
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "managerRhByFkActuelMrh")
	public Set<Collaborateur> getCollaborateursForFkActuelMrh() {
		return this.collaborateursForFkActuelMrh;
	}

	public void setCollaborateursForFkActuelMrh(
			Set<Collaborateur> collaborateursForFkActuelMrh) {
		this.collaborateursForFkActuelMrh = collaborateursForFkActuelMrh;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "managerRhByFkEncienMrh")
	public Set<Collaborateur> getCollaborateursForFkEncienMrh() {
		return this.collaborateursForFkEncienMrh;
	}

	public void setCollaborateursForFkEncienMrh(
			Set<Collaborateur> collaborateursForFkEncienMrh) {
		this.collaborateursForFkEncienMrh = collaborateursForFkEncienMrh;
	}

}
